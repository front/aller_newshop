<?php

/**
 * @file
 * Helper module for new shops cloning on the Aller platform.
 */

function aller_newshop_menu() {
  $items = array();
  $items['test/clone'] = array(
    'title' => 'Clone shop',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('aller_newshop_clone_shop_form'),
    'access arguments' => array('create new users'),
  );
  return $items;
}

function aller_newshop_clone_shop_form($form, &$form_state) {
  $form['shop_name'] = array(
    '#type' => 'textfield',
    '#title' => 'Shop name',
  );

  $form['directory'] = array(
    '#type' => 'textfield',
    '#title' => 'Directory',
    '#value' => '/sites'
  );

  $form['themes'] = array(
    '#type' => 'select',
    '#options' => aller_newshop_get_themes(),
    '#title' => t('Themes'),
    '#default_value' => 'SAT',
    '#title_display' => TRUE,
  );

  $modules = aller_newshop_get_modules();

  $form['modules_groups'] = array(
    '#type' => 'fieldset',
    '#title' => t('Modules'),
  );

  foreach ($modules as $module) {
    $form['modules_groups']['module_' . $module] = array(
      '#type' => 'checkbox',
      '#title' => $module,
      '#default_value' => FALSE,
    );
  }

  $features = aller_newshop_get_features();

  $form['features_groups'] = array(
    '#type' => 'fieldset',
    '#title' => t('Features'),
  );

  foreach ($features as $feature) {
    $form['features_groups']['feature_' . $feature] = array(
      '#type' => 'checkbox',
      '#title' => $feature,
      '#default_value' => FALSE,
    );
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

function aller_newshop_clone_shop_form_submit(&$form, &$form_state) {
  $sites_path = realpath(DRUPAL_ROOT . '/' . trim($form_state['input']['directory'], '/'));
  define('ALLER_NEWSHOP_DESTINATION', $sites_path);

  $variables = array();
  $variables['SHOP_NAME'] = $form_state['input']['shop_name'];

  $themes = array();
  $modules = array();
  $features = array();

  $template_themes = aller_newshop_get_themes();
  $themes[] = $template_themes[$form_state['input']['themes']];
  foreach ($form_state['input'] as $key => $value) {
    if (strpos($key, 'module_') === 0 && $value == 1) {
      $modules[] = str_replace('module_', '', $key);
    }
    elseif (strpos($key, 'feature_') === 0 && $value == 1) {
      $features[] = str_replace('feature_', '', $key);
    }
  }

  aller_newshop_clone_themes($themes, $variables);
  aller_newshop_clone_modules($modules, $variables);
  aller_newshop_clone_features($features, $variables);

  drupal_set_message('Shop cloned with success', $type = 'status');
}

function aller_newshop_get_themes() {
  $sources = aller_newshop_get_source_directories();

  $dir = opendir($sources['themes']);

  $return = array();
  while (false !== ($entry = readdir($dir))) {
    if ($entry != '.' && $entry != '..') {
      $return[] = $entry;
    }
  }

  return $return;
}

function aller_newshop_get_modules() {
  $sources = aller_newshop_get_source_directories();

  $dir = opendir($sources['modules']);

  $return = array();
  while (false !== ($entry = readdir($dir))) {
    if ($entry != '.' && $entry != '..') {
      $return[] = $entry;
    }
  }

  return $return;
}

function aller_newshop_get_features() {
  $sources = aller_newshop_get_source_directories();

  $dir = opendir($sources['features']);

  $return = array();
  while (false !== ($entry = readdir($dir))) {
    if ($entry != '.' && $entry != '..') {
      $return[] = $entry;
    }
  }

  return $return;
}
/*define('ALLER_NEWSHOP_DESTINATION', DRUPAL_ROOT . '/sites/allershop');
var_dump(aller_newshop_clone_features(array('test_SHOP_NAME'), array('SHOP_NAME' => 'jegger')));
exit();*/

function aller_newshop_clone_themes($themes, $variables) {
  if (!is_array($themes)) {
    return FALSE;
  }

  $destination = ALLER_NEWSHOP_DESTINATION . '/themes';
  if (!is_dir($destination)) {
    return FALSE;
  }

  $directories = aller_newshop_get_source_directories();

  foreach ($themes as $theme) {
    if (!is_dir($directories['themes'] . '/' . $theme)) {
      continue;
    }
    $rtheme = aller_newshop_renderize($variables, $theme);
    if (is_dir($destination . '/' . $rtheme)) {
      continue;
    }

    aller_newshop_copy_directory($directories['themes'] . '/' . $theme, $destination, $variables);
  }
}

function aller_newshop_clone_modules($modules, $variables) {
  if (!is_array($modules)) {
    return FALSE;
  }

  $destination = ALLER_NEWSHOP_DESTINATION . '/modules/custom';
  if (!is_dir($destination)) {
    return FALSE;
  }

  $directories = aller_newshop_get_source_directories();

  foreach ($modules as $module) {
    if (!is_dir($directories['modules'] . '/' . $module)) {
      continue;
    }
    $rmodule = aller_newshop_renderize($variables, $module);
    if (is_dir($destination . '/' . $rmodule)) {
      continue;
    }

    aller_newshop_copy_directory($directories['modules'] . '/' . $module, $destination, $variables);
  }
}

function aller_newshop_clone_features($features, $variables) {
  if (!is_array($features)) {
    return FALSE;
  }

  $destination = ALLER_NEWSHOP_DESTINATION . '/modules/features';
  if (!is_dir($destination)) {
    return FALSE;
  }

  $directories = aller_newshop_get_source_directories();

  foreach ($features as $feature) {
    if (!is_dir($directories['features'] . '/' . $feature)) {
      continue;
    }
    $rfeature = aller_newshop_renderize($variables, $feature);
    if (is_dir($destination . '/' . $rfeature)) {
      continue;
    }

    aller_newshop_copy_directory($directories['modules'] . '/' . $feature, $destination, $variables);
  }
}

function aller_newshop_copy_directory($source, $destination, $variables) {
  $name = aller_newshop_renderize($variables, basename($source));
  $destination = $destination . '/' . $name;
  if (!mkdir($destination)) {
    return FALSE;
  }

  $directory_content = aller_newshop_get_all_directory($source);

  foreach ($directory_content as $path => $object) {
    $destination_path = str_replace($source, $destination, $path);
    $destination_path = aller_newshop_renderize($variables, $destination_path);
    if (is_dir($path)) {
      mkdir($destination_path);
    }
    elseif(is_file($path)) {
      $content = file_get_contents($path);
      $content = aller_newshop_renderize($variables, $content, TRUE);

      file_put_contents($destination_path, $content);
    }
  }
}

function aller_newshop_renderize($variables, $content, $safe = FALSE) {
  foreach ($variables as $key => $value) {
    if ($safe) {
      $content = str_replace('{' . $key . '}', $value, $content);
    }
    else {
      $content = str_replace($key, $value, $content);
    }
  }
  return $content;
}

function aller_newshop_get_source_directories() {
  return array(
    'themes' => DRUPAL_ROOT . '/' . drupal_get_path('module', 'aller_newshop') . '/templates/themes',
    'modules' => DRUPAL_ROOT . '/' . drupal_get_path('module', 'aller_newshop') . '/templates/modules',
    'features' => DRUPAL_ROOT . '/' . drupal_get_path('module', 'aller_newshop') . '/templates/features',
  );
}

function aller_newshop_get_all_directory($directory) {
  if (!is_dir($directory)) {
    return array();
  }

  return new RecursiveIteratorIterator(
           new RecursiveDirectoryIterator($directory),
           RecursiveIteratorIterator::SELF_FIRST);
}
